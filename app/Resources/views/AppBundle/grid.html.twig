{% extends '@APYDataGrid/blocks.html.twig' %}


{% block grid_filters %}{% endblock %}

{% block grid %}
    <div class="grid">
        {% if grid.totalCount > 0 or grid.isFiltered or grid.noDataMessage is same as(false) %}
            <form id="{{ grid.hash }}" action="{{ grid.routeUrl }}" method="post">
                <div class="grid_header">
                    {% if grid.massActions|length > 0 %}
                        {{ grid_actions(grid) }}
                    {% endif %}
                </div>
                <div class="grid_body">
                    <table class="table table-striped table-hover table-bordered dataTable">
                        {% if grid.isTitleSectionVisible %}
                            {{ grid_titles(grid) }}
                        {% endif %}
                        {% if grid.isFilterSectionVisible %}
                            {{ grid_filters(grid) }}
                        {% endif %}
                        {{ grid_rows(grid) }}
                    </table>
                </div>
                <div class="grid_footer">
                    {% if grid.isPagerSectionVisible %}
                        {{ grid_pager(grid) }}
                    {% endif %}
                    {% if grid.exports|length > 0 %}
                        {{ grid_exports(grid) }}
                    {% endif %}
                    {% if grid.tweaks|length > 0 %}
                        {{ grid_tweaks(grid) }}
                    {% endif %}
                </div>
                {% if withjs %}
                    {{ grid_scripts(grid) }}
                {% endif %}
            </form>
        {% else %}
            {{ grid_no_data(grid) }}
        {% endif %}
    </div>
{% endblock grid %}

{% block grid_search %}
    {% if grid.isFilterSectionVisible %}
        
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4 class="panel-title">
                        <i data-icon-show="ace-icon fa fa-angle-right" data-icon-hide="ace-icon fa fa-angle-down" class="bigger-110 ace-icon fa fa-angle-right"></i>
                        &nbsp;{{ 'Filters'|trans() }}
                    </h4>
                </div>
                    <div class="col-lg-13">
                        <div class="grid-search" >
                            <form id="{{ grid.hash }}_search" action="{{ grid.routeUrl }}" method="post" class="form-horizontal">
                                {% set count = 0 %}
                                {% for column in grid.columns %}
                                    {% if column.isFilterable and column.type not in ['actions', 'massaction'] %}
                                        {% set count = count + 1 %}
                                    {% endif %}
                                {% endfor %}
                                {% set column_count = 1 %}
                                {% set break = (count/column_count)|round(0, 'ceil') %}
                                <fieldset class="col-lg-{{ 6 // column_count }} " >
                                    {% set i = 0 %}
                                    {% for column in grid.columns %}
                                    {% if column.isFilterable and column.type not in ['actions', 'massaction'] %}
                                    {% set columnTitle = grid.prefixTitle ~ column.title %}
                                    <div class="{{ cycle(['odd', 'even'], loop.index) }} form-group">
                                        <label class=" control-label col-sm-3 required">{{ columnTitle|trans }}</label>
                                        <div class="col-sm-9">{{ grid_filter(column, grid, false)|raw }}</div>
                                    </div>
                                    {% set i = i + 1 %}
                                    {% if (i % break) == 0 and i != count %}
                                </fieldset>
                                <fieldset class="col-lg-{{ 12 // column_count }}">
                                    {% endif %}
                                    {% endif %}
                                    {% endfor %}
                                </fieldset>
                                <div style="clear: both"></div>
                                <div class="grid-search-action form-actions">
                                    <button type="submit" class="grid-search-submit btn btn-primary" value="{{ 'Search'|trans() }}"/><i class="fa fa-search"></i> {{ 'Search'|trans() }}</button>
                                    <button type="button" class="grid-search-reset btn btn-default" value="{{ 'Reset'|trans() }}" onclick="return {{ grid.hash }}_reset();"/><i class="fa fa-refresh"></i> {{ 'Reset'|trans() }}</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
           
       
    {% endif %}
{% endblock grid_search %}

{# ------------------------------------------------ grid_column_actions_cell --------------------------------------------- #}

    
{# --------------------------------------------------- grid_exports ------------------------------------------------- #}
{% block grid_exports %}
<div class="exports" style="float:right">
    {% spaceless %}
            <span class="label label-xlg label-warning arrowed-right">{{ 'Export Format'|trans({}, 'web_factory_back_office_theme') }}</span>&nbsp;
            <select name="{{grid.hash}}[{{ constant('APY\\DataGridBundle\\Grid\\Grid::REQUEST_QUERY_EXPORT') }}]">
            <option value="-1"></option>
            {% for key, export in grid.exports %}
            <option value="{{key}}">{{ export.title|trans }}</option>
            {% endfor %}
        </select>
            &nbsp;<button class="btn btn-sm btn-warning fix-top" type="submit" value="{{ 'Export'|trans({}, 'web_factory_back_office_theme') }}"/><i class="ace-icon fa fa-download"></i> {{ 'Export'|trans({}, 'web_factory_back_office_theme') }}</button>
    {% endspaceless %}
</div>
{% endblock grid_exports %}

{# --------------------------------------------------- grid_column_boolean_cell ------------------------------------- #}
{% block grid_column_boolean_cell %}
    <i class="fa {{ value == 'yes' or value == 'true' ? 'fa-check-square-o' : 'fa-square-o' }}"></i>
{% endblock grid_column_boolean_cell %}

{# --------------------------------------------------- grid_actions ------------------------------------------------- #}
{% block grid_actions %}
    <div class="mass-actions">
    <span class="grid_massactions_helper">
        <a href="#" onclick="return {{ grid.hash }}_markVisible(true);">{{ 'Select visible'|trans }}</a> |
        <a href="#" onclick="return {{ grid.hash }}_markVisible(false);">{{ 'Deselect visible'|trans }}</a> |
        {#<a href="#" onclick="return {{ grid.hash }}_markAll(true);">{{ 'Select all'|trans }}</a> |#}
        {#<a href="#" onclick="return {{ grid.hash }}_markAll(false);">{{ 'Deselect all'|trans }}</a>#}
        <span class="mass-actions-selected" id="{{ grid.hash }}_mass_action_selected"></span>
    </span>
        {% spaceless %}
            <div style="float:right;" class="grid_massactions">
                {{ 'Action'|trans }}
                <input type="hidden" id="{{ grid.hash }}_mass_action_all" name="{{ grid.hash }}[{{ constant('APY\\DataGridBundle\\Grid\\Grid::REQUEST_QUERY_MASS_ACTION_ALL_KEYS_SELECTED') }}]" value="0"/>
                <select class="form-control input-sm" name="{{ grid.hash }}[{{ constant('APY\\DataGridBundle\\Grid\\Grid::REQUEST_QUERY_MASS_ACTION') }}]">
                    <option value="-1"></option>
                    {% for key, massAction in grid.massActions %}
                        <option value="{{ key }}">{{ massAction.title|trans }}</option>
                    {% endfor %}
                </select>
                <input type="submit"  value="{{ 'Submit Action'|trans }}"/>
            </div>
        {% endspaceless %}
    </div>
{% endblock grid_actions %}

{# -------------------------------------------- grid_column_filter_type_select --------------------------------------- #}
{% block grid_column_filter_type_select %}
    {% set btwOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_BTW') %}
    {% set btweOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_BTWE') %}
    {% set isNullOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_ISNULL') %}
    {% set isNotNullOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_ISNOTNULL') %}
    {% set op = column.data.operator is defined ? column.data.operator : column.defaultOperator %}
    {% set from = column.data.from is defined ? column.data.from : null %}
    {% set to = column.data.to is defined ? column.data.to : null %}
    {% set multiple = column.selectMulti %}
    {% set expanded = column.selectExpanded %}
    <span class="grid-filter-select">
    {{ grid_column_operator(column, grid, op, submitOnChange) }}
        <span class="grid-filter-select-query">
    {% if expanded %}
        <span class="grid-filter-select-query-from" id="{{ grid.hash }}__{{ column.id }}__query__from" {{ ( op == isNullOperator or op == isNotNullOperator ) ? 'style="display: none;" disabled="disabled"' : '' }}>
        {% for key, value in column.values %}
            <span><input class="form-control" type="{% if multiple %}checkbox{% else %}radio{% endif %}" name="{{ grid.hash }}[{{ column.id }}][from][]" value="{{ key }}" {% if key in from %} checked="checked"{% endif %} {% if submitOnChange is same as(true) %}onclick="return {{ grid.hash }}_submitForm(event, this.form);"{% endif%}/><label>{{ value }}</label></span>
        {% endfor %}
        </span>
        <span class="grid-filter-select-query-to" id="{{ grid.hash }}__{{ column.id }}__query__to" {{ ( op == btwOperator or op == btweOperator ) ? '': 'style="display: none;" disabled="disabled"' }}>
        {% for key, value in column.values %}
            <span><input class="form-control" type="{% if multiple %}checkbox{% else %}radio{% endif %}" name="{{ grid.hash }}[{{ column.id }}][to]" value="{{ key }}" {% if not to is null and to == key %} checked="checked"{% endif %} {% if submitOnChange is same as(true) %}onclick="return {{ grid.hash }}_submitForm(event, this.form);"{% endif%}/><label>{{ value }}</label></span>
        {% endfor %}
        </span>
        {% if multiple %}<input type="submit" value="{{ 'Go'|trans }}" />{% endif %}
    {% else %}
        <select{% if multiple %} multiple="multiple"{% endif %} class="form-control input-sm" name="{{ grid.hash }}[{{ column.id }}][from][]" class="grid-filter-select-query-from" id="{{ grid.hash }}__{{ column.id }}__query__from" {% if submitOnChange is same as(true) %}onchange="return {{ grid.hash }}_submitForm(event, this.form);"{% endif%} {{ ( op == isNullOperator or op == isNotNullOperator ) ? 'style="display: none;" disabled="disabled"' : '' }}>
            <option value="">&nbsp;</option>
            {% for key, value in column.values %}
                <option value="{{ key }}"{% if key in from %} selected="selected"{% endif %}>{{ value|trans }}</option>
            {% endfor %}
        </select>
        <select class="form-control input-sm" name="{{ grid.hash }}[{{ column.id }}][to]" class="grid-filter-select-query-to" id="{{ grid.hash }}__{{ column.id }}__query__to" {% if submitOnChange is same as(true) %}onchange="return {{ grid.hash }}_submitForm(event, this.form);"{% endif%} {{ ( op == btwOperator or op == btweOperator ) ? '': 'style="display: none;" disabled="disabled"' }}>
            <option value="">&nbsp;</option>
            {% for key, value in column.values %}
                <option value="{{ key }}"{% if not to is null and to == key %} selected="selected"{% endif %}>{{ value|trans }}</option>
            {% endfor %}
        </select>
        {% if multiple %}<input type="submit" value="{{ 'Go'|trans }}" />{% endif %}
    {% endif %}
    </span>
</span>
{% endblock %}

{# --------------------------------------------------- grid_titles -------------------------------------------------- #}
{% block grid_titles %}
    <tr class="grid-row-titles">
        {% for column in grid.columns %}
            {% if column.visible(grid.isReadyForExport) %}
                <th class="{% if column.align != 'left'%}align-{{ column.align }}{% endif %}{% if column.class %} {{ column.class }}{% endif %}{% if loop.last %} last-column{% endif %}"{% if(column.size > -1) %} style="width:{{ column.size }}px;"{% endif %}>
                    {%- spaceless %}
                        {% if column.type == 'massaction' %}
                            <input type="checkbox" class="grid-mass-selector" onclick="{{ grid.hash }}_markVisible(this.checked);"/>
                        {% else %}
                            {% set columnTitle = grid.prefixTitle ~ column.title ~ '__abbr' %}
                            {% if columnTitle|trans == columnTitle %}
                                {% set columnTitle = grid.prefixTitle ~ column.title %}
                            {% endif %}
                            {% if (column.sortable) %}
                                <a class="order" href="{{ grid_url('order', grid, column) }}" title="{{ 'Order by'|trans }} {{ columnTitle|trans }}">{{ columnTitle|trans }}</a>
                                {% if column.order == 'asc' %}
                                    <div class="sort_up fa fa-sort-asc"></div>
                                {% elseif column.order == 'desc' %}
                                    <div class="sort_down fa fa-sort-desc"></div>
                                {% endif %}
                            {% else %}
                                {{ columnTitle|trans }}
                            {% endif %}
                        {% endif %}
                    {% endspaceless -%}
                </th>
            {% endif %}
        {% endfor %}
    </tr>
{% endblock grid_titles %}

{# -------------------------------------------- grid_column_filter_type_input --------------------------------------- #}
 {% block grid_column_filter_type_input %}
    {% set btwOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_BTW') %}
    {% set btweOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_BTWE') %}
    {% set isNullOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_ISNULL') %}
    {% set isNotNullOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_ISNOTNULL') %}
    {% set op = column.data.operator is defined ? column.data.operator : column.defaultOperator %}
    {% set from = column.data.from is defined ? column.data.from : null %}
    {% set to = column.data.to is defined ? column.data.to : null %}
    <span class="grid-filter-input">
    {{ grid_column_operator(column, grid, op, submitOnChange) }}
        <span class="grid-filter-input-query">
            {% if column.inputType == 'datetime' or column.inputType == 'date' %}
                {% set formats = {
                    'datetime' : {
                        'twig' : "d/m/Y H:i:s",
                        'format': 'dd/mm/yyyy hh:ii:ss',
                        'link_format': 'yyyy-mm-dd hh:ii:ss'
                    },
                    'date' :  {
                        'twig' : "d/m/Y",
                        'format': 'dd/mm/yyyy',
                        'link_format': 'yyyy-mm-dd'
                    }
                } %}

                <div class="datepicker input-group date form_{{ column.inputType }} grid-filter-input-query-from" data-date="{{ from ? from|date(formats[column.inputType].twig) : '' }}" data-date-format="{{ formats[column.inputType].format }}" data-link-field="{{ grid.hash }}__{{ column.id }}__query__from" data-link-format="{{ formats[column.inputType].link_format }}" {{ ( op == isNullOperator or op == isNotNullOperator ) ? 'style="display: none;" disabled="disabled"' : '' }}>
                    <input class="form-control" value="{{ from ? from|date(formats[column.inputType].twig) : '' }}" />
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
                <input type="hidden" value="{{ from }}" class="grid-filter-input-query-from datetime_hidden" name="{{ grid.hash }}[{{ column.id }}][from]" id="{{ grid.hash }}__{{ column.id }}__query__from" {% if submitOnChange is same as(true) %}onkeypress="return {{ grid.hash }}_submitForm(event, this.form);"{% endif%} {{ ( op == isNullOperator or op == isNotNullOperator ) ? 'style="display: none;" disabled="disabled"' : '' }} />

                <div class="datepicker input-group date form_{{ column.inputType }} grid-filter-input-query-to" data-date="{{ to ? to|date(formats[column.inputType].twig) : '' }}" data-date-format="{{ formats[column.inputType].format }}" data-link-field="{{ grid.hash }}__{{ column.id }}__query__to"  data-link-format="{{ formats[column.inputType].link_format }}" {{ ( op == btwOperator or op == btweOperator ) ? '': 'style="display: none;" disabled="disabled"' }}>
                    <input class="form-control" value="{{ to ? to|date(formats[column.inputType].twig) : '' }}" />
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span> 
                    </span>
                </div>
                <input type="hidden" value="{{ to }}" class="grid-filter-input-query-to datetime_hidden" name="{{ grid.hash }}[{{ column.id }}][to]" id="{{ grid.hash }}__{{ column.id }}__query__to" {% if submitOnChange is same as(true) %}onkeypress="return {{ grid.hash }}_submitForm(event, this.form);"{% endif%} {{ ( op == btwOperator or op == btweOperator ) ? '': 'style="display: none;" disabled="disabled"' }} />
            {% else %}
                <input type="{{ column.inputType }}" value="{{ from }}" class="form-control grid-filter-input-query-from" name="{{ grid.hash }}[{{ column.id }}][from]" id="{{ grid.hash }}__{{ column.id }}__query__from" {% if submitOnChange is same as(true) %}onkeypress="return {{ grid.hash }}_submitForm(event, this.form);"{% endif%} {{ ( op == isNullOperator or op == isNotNullOperator ) ? 'style="display: none;" disabled="disabled"' : '' }} />
                <input type="{{ column.inputType }}" value="{{ to }}" class="form-control grid-filter-input-query-to" name="{{ grid.hash }}[{{ column.id }}][to]" id="{{ grid.hash }}__{{ column.id }}__query__to" {% if submitOnChange is same as(true) %}onkeypress="return {{ grid.hash }}_submitForm(event, this.form);"{% endif%} {{ ( op == btwOperator or op == btweOperator ) ? '': 'style="display: none;" disabled="disabled"' }} />
            {% endif %}
    </span>
</span>
{% endblock grid_column_filter_type_input %}

{% block grid_scripts_switch_operator %}
    {% set btwOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_BTW') %}
    {% set btweOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_BTWE') %}
    {% set isNullOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_ISNULL') %}
    {% set isNotNullOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_ISNOTNULL') %}
    function {{ grid.hash }}_switchOperator(elt, query_, submitOnChange)
    {
        submitOnChange = (typeof submitOnChange == 'undefined') ? true : submitOnChange;
        var inputFrom = document.getElementById(query_+'from');
        var inputTo = document.getElementById(query_+'to');
        if ((elt.options[elt.selectedIndex].value == '{{ btwOperator }}') || (elt.options[elt.selectedIndex].value == '{{ btweOperator }}')) {
            $(inputFrom).prev('div').show();
            inputFrom.style.display = '';
            inputFrom.disabled=false;
            $(inputTo).prev('div').show();
            inputTo.style.display = '';
            inputTo.disabled=false;
        } else if ((elt.options[elt.selectedIndex].value == '{{ isNullOperator }}') || (elt.options[elt.selectedIndex].value == '{{ isNotNullOperator }}')) {
            $(inputFrom).prev('div').hide();
            inputFrom.style.display = 'none';
            inputFrom.disabled=true;
            $(inputTo).prev('div').hide();
            inputTo.style.display = 'none';
            inputTo.disabled=true;
            if (submitOnChange) {
                elt.form.submit();
            }
        } else {
            $(inputFrom).prev('div').show();
            inputFrom.style.display = '';
            inputFrom.disabled=false;
            $(inputTo).prev('div').hide();
            inputTo.style.display = 'none';
            inputTo.disabled=true;
        }
    }
{% endblock grid_scripts_switch_operator %}